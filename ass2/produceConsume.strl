module cruiseControl :
function check_speed(float): integer;
function check(float): integer;
function regulateThrottle(integer, float, float): float;

input  On, Off, Resume, Set, QuickDecel, QuickAccel;
input  Accel : float, Brake : float, Speed : float, cruiseSpeed:float; 
output ThrottleCmd : float;
output CruiseState : integer;  

signal On_state: integer in
[
loop
    emit CruiseState(1);
    emit On_state(0);
    abort
        await On;
        loop
        var speed, brake, accel: integer in
        speed := check_speed(?Speed);  
        brake:= check(?Brake);
        accel:= check(?Accel);
            if brake =0 then 
                    if accel =0 then                                                  
                            	if speed =1 then                      
                               	emit CruiseState(2);                          
                            	else
                                	emit CruiseState(3);
                               end if;
                            pause;
                         
                    else
                    	emit CruiseState(3);
                    	pause;
                    end if;
            emit On_state(1);
            else
            	emit CruiseState(4);
            	await Resume;
            end if;            
            end var
        end loop
    when Off;
    emit CruiseState(1);
    pause;
end loop
]

||

[
loop
	emit ThrottleCmd(regulateThrottle(?On_state, ?cruiseSpeed, ?Speed));
	pause;
end loop
] 
end signal
end module

