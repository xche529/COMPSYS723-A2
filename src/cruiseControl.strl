module cruiseControl :

input  On, Off, Resume, Set, QuickDecel, QuickAccel;
input  Accel : float, Brake : float, Speed : float; 
output CruiseSpeed : float, ThrottleCmd : float;
output CruiseState : integer;
output Brake1: integer;
output Accel1: integer;
output InSpLimit: integer;
function checkZero(float): integer;
function updateCruiseSpeed(integer,float): float;
function checkSpeedValid(float): integer;

signal isBrake, isAccel, inSpeedLimit,CruiseStateSignal : integer, speedUpdate, CruiseStateUpdate, currentCruiseSpeed : float in

%CruiseState control
[
loop
    emit CruiseStateSignal(1);
    emit CruiseStateUpdate;
    abort
        await On;
        loop
            abort
                loop
                    abort
                        loop
                            present inSpeedLimit then
                                emit CruiseStateSignal(2);
                            else
                                emit CruiseStateSignal(3);
                            end present;
                            emit CruiseStateUpdate;
                            pause;
                        end loop
                    when isAccel;
                    emit CruiseStateSignal(3);
                    emit CruiseStateUpdate;
                    pause;
                end loop
            when isBrake;
            emit CruiseStateSignal(4);
            emit CruiseStateUpdate;
            await Resume;
        end loop
    when Off;
end loop
]
||
%Check brake and accel
[
loop
    pause;

    var B: integer, A: integer in
        B:= checkZero(?Brake);
        A:= checkZero(?Accel);
        if B = 0 then
            emit isBrake;
            emit Brake1(1);
        else
            emit Brake1(0);
        end if;

        if A = 0 then
            emit isAccel;
            emit Accel1(1);
        else
            emit Accel1(0);
        end if;

    end var
end loop
]
||
%Handle cruise speed change
[
loop
    abort
        await On;
        emit currentCruiseSpeed(updateCruiseSpeed(0,?Speed));
        emit speedUpdate;
        %Bug to fix below (pause)
        pause;
        loop
            abort
                abort
                    loop
                        abort
                            loop
                                present QuickAccel then
                                    emit currentCruiseSpeed(updateCruiseSpeed(1,pre(?currentCruiseSpeed)));
                                    emit speedUpdate;
                                end present;
                                pause;
                            end loop
                        when QuickDecel;
                        emit currentCruiseSpeed(updateCruiseSpeed(2,pre(?currentCruiseSpeed)));
                        emit speedUpdate;
                    end loop
                when On;
            when Set;
            emit currentCruiseSpeed(updateCruiseSpeed(0,?Speed));
            emit speedUpdate;
        end loop
    when Off;
end loop
]

||

%Check if speed is in valid range
[
loop
    var V: integer in
        await Speed;
            V:=  checkSpeedValid(?Speed);
            if V = 1 then
                emit inSpeedLimit;
                emit InSpLimit(1);
            else 
                emit InSpLimit(0);
            end if;
    end var
end loop
]

||
[
loop
    present speedUpdate then
        emit CruiseSpeed(?currentCruiseSpeed);
        pause;
    else
        pause;
    end present;
end loop
]
||
[
loop
    present CruiseStateUpdate then
        emit CruiseState(?CruiseStateSignal);
        pause;
    else
        pause;
    end present;
end loop
]

||

[
    




]

end signal
end module

